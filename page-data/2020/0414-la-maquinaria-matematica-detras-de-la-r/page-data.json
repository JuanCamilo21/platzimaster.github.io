{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/0414-la-maquinaria-matematica-detras-de-la-r/","result":{"data":{"site":{"siteMetadata":{"title":"Platzi Master"}},"markdownRemark":{"id":"5b68cae2-2f03-5176-90ec-3d83e2ecf2e2","excerpt":"Cuarta parte - nivel avanzado Hablemos de matemáticas. Spoiler Alert: no habrá nada de código. Números naturales Los números naturales () son objetos…","html":"<p><em>Cuarta parte - nivel avanzado</em></p>\n<p>Hablemos de matemáticas. Spoiler Alert: no habrá nada de código.</p>\n<h2>Números naturales</h2>\n<p>Los números naturales (<code class=\"language-text\">0, 1, 2, 3, 4, 5, …</code>) son objetos matemáticas que pueden ser descritos a través de enunciados matemáticos (axiomas) que modelan su comportamiento.</p>\n<p>Este comportamiento fue estudiado por siglos y fue Peano quien pudo definir a los números naturales a través de 5 axiomas que los modelan.</p>\n<h2>Axiomas de Peano</h2>\n<p>Dado un conjunto <code class=\"language-text\">0</code> y otro conjunto <code class=\"language-text\">N</code> (conjunto lo podemos entender como un objeto matemático que tiene como relación fundamental la pertenencia), y una relación <code class=\"language-text\">s</code> (una conjunto de pares ordenados) de elementos de <code class=\"language-text\">N</code>.</p>\n<blockquote>\n<p>Axioma 1: <code class=\"language-text\">0</code> pertenece a <code class=\"language-text\">N</code>, es decir, <code class=\"language-text\">0</code> es un número natural.</p>\n</blockquote>\n<blockquote>\n<p>Axioma 2: Si <code class=\"language-text\">n</code> pertenece a <code class=\"language-text\">N</code>, hay un único <code class=\"language-text\">m</code> que pertenece a <code class=\"language-text\">N</code> tal que <code class=\"language-text\">(n, m)</code> pertenecen a <code class=\"language-text\">s</code>, es decir, <code class=\"language-text\">s</code> es una función.</p>\n</blockquote>\n<blockquote>\n<p>Axioma 3: Para toda <code class=\"language-text\">n</code> perteneciente a <code class=\"language-text\">N</code>,  <code class=\"language-text\">s(n)</code> es diferente de <code class=\"language-text\">0</code>.</p>\n</blockquote>\n<blockquote>\n<p>Axioma 4: Para cualquier <code class=\"language-text\">n</code> y <code class=\"language-text\">m</code> que pertenecen a <code class=\"language-text\">N</code>, si <code class=\"language-text\">s(n) = s(m)</code>, entonces <code class=\"language-text\">n = m</code>.</p>\n</blockquote>\n<blockquote>\n<p>Axioma 5: Principio de Inducción. Sea <code class=\"language-text\">A</code> un subconjunto de <code class=\"language-text\">N</code>, tal que <code class=\"language-text\">0</code> pertenece a <code class=\"language-text\">A</code>, y cada vez que <code class=\"language-text\">n</code> pertenece a <code class=\"language-text\">A</code>, sucede que <code class=\"language-text\">s(n)</code> pertenece a <code class=\"language-text\">A</code>. Entonces <code class=\"language-text\">A = N</code>.</p>\n</blockquote>\n<p>Dos comentarias antes de la explicación:</p>\n<ol>\n<li>Todos son conjuntos, la pertenencia o “ser elemento de”  es una relación entre conjuntos. Los elementos y los conjuntos no son dos cosas diferentes. </li>\n<li>Los axiomas de Peano modelan a los Números naturales pero no de manera única. De hecho, podemos tomar los números naturales mayores a 3 como <code class=\"language-text\">N</code>, y si tomamos como <code class=\"language-text\">0 = 3</code>, se cumplirían todos los axiomas de Peano. Por lo que, iniciar en 0 o en 1 es equivalente, fin de la discusión.</li>\n</ol>\n<p>Ahora sí, la explicación para los mortales.</p>\n<p>El axioma 1 dice que <code class=\"language-text\">0</code> es un número natural. El axioma 2 dice que sólo existe un único (y sólo uno) sucesor de cada número natural, así, el sucesor de <code class=\"language-text\">0</code> es <code class=\"language-text\">1</code> y sólamente el número <code class=\"language-text\">1</code> (los naturales no se ramifican). El axioma 3 dice que <code class=\"language-text\">0</code> no es sucesor de nadie (los naturales no son un ciclo). El axioma 4 dice que ningún número puede ser el sucesor de 2 naturales diferentes (no tiene ciclos o bucles). Y el axioma 5 nos da el principio de inducción.</p>\n<p>El principio de inducción nos dice que si un subconjunto de los naturales tiene el <code class=\"language-text\">0</code> (la base) y cada vez que tenga a un natural, también le pertenece su sucesor (paso inductivo), entonces todos los números naturales están contenidos en dicho subconjunto, es decir, el subconjunto es el total de todos los números naturales.</p>\n<p>Así, los números naturales se caracterizan por un el <code class=\"language-text\">0</code>, la fusión suceso.</p>\n<h2>El teorema de recursión</h2>\n<p>Esta estructura de un conjunto (<code class=\"language-text\">N</code>) con un elemento (<code class=\"language-text\">0</code>) y una función (<code class=\"language-text\">s</code> o sucesor) no es algo único o raro en matemáticas. Así que es fácil seudo copiar los números naturales en cualquier conjunto. De esto trata el teorema de recursión.</p>\n<p>Sea <code class=\"language-text\">X</code> un conjunto, <code class=\"language-text\">x0</code> un conjunto que pertenece a <code class=\"language-text\">X</code> y <code class=\"language-text\">f</code> una función de <code class=\"language-text\">X</code> a <code class=\"language-text\">X</code> (<code class=\"language-text\">f: X -&gt; X</code>). Entonces existe una única función <code class=\"language-text\">g</code> de los naturales a <code class=\"language-text\">X</code> (<code class=\"language-text\">g: N -&gt; X</code>) tal que <code class=\"language-text\">g(0) = x0</code> y <code class=\"language-text\">g(s(n)) = f(g(n))</code>.</p>\n<p>Es decir, podemos copiar a los naturales en <code class=\"language-text\">X</code>, usando la función <code class=\"language-text\">f</code> como función sucesor dentro de <code class=\"language-text\">X</code>. Obviamente de manera tosca y no precisa, ya que si no cumple propiedades similares a los axiomas 3 y 4 de Peano, no obtenemos un “línea”.</p>\n<p>La estructura <code class=\"language-text\">g(0) = x0</code> (base), y <code class=\"language-text\">g(s(x)) = f(g(x))</code> (paso recursivo) la hemos visto repetidas veces en los post anteriores. Por ejemplo. Cuando definimos la multiplicación, <code class=\"language-text\">X</code> eran los mismos números naturales, <code class=\"language-text\">x0 = 0</code>  y <code class=\"language-text\">f</code> era la tabla de sumar:</p>\n<ol>\n<li><code class=\"language-text\">g(0) = 0;  k * 0 = 0</code>,</li>\n<li><code class=\"language-text\">g(s(n)) = k + (g(n)); k * s(n) = k + k * n</code>.</li>\n</ol>\n<h2>Comentarios de implementación</h2>\n<p>Una propiedad muy importante de los números naturales es que todo número natural es el 0 o el sucesor de alguien. Esta propiedad la usamos en todos los códigos de esta serie sobre la recursividad. Al poner <code class=\"language-text\">if</code> es igual al caso base hacemos algo y si no aplicamos recursión, estábamos aplicando esta propiedad. Y de una manera más práctica cuando llamábamos a la función con el <code class=\"language-text\">n - 1</code>, ya que esto sólo tiene sentido si conocemos que <code class=\"language-text\">n</code> es sucesor de alguien.</p>\n<p>Al seudo copiar la estructura de los naturales, podemos asegurar que si vamos retrocediendo, siempre vamos a terminar en el 0. Así, <code class=\"language-text\">g(4) = g( s(3) ) = f( g(3) ) = f( f( g( s(2) ) ) ) = f( f( g(2) ) ) = f( f( f( g(1) ) ) ) =  f( f( f( f( g(0) ) ) ) ) = f( f( f( f( f(x0) ) ) ) )</code>, es decir, aplicar sucesivamente la función <code class=\"language-text\">f</code> a <code class=\"language-text\">x0</code>.</p>\n<p>En general, <code class=\"language-text\">n</code> es el resultado de aplicar <code class=\"language-text\">n</code> veces la función sucesor al <code class=\"language-text\">0</code>, <code class=\"language-text\">n = s^n(0)</code>. Entonces, <code class=\"language-text\">g(n)</code> es aplicar <code class=\"language-text\">n</code> veces la función <code class=\"language-text\">f</code> a <code class=\"language-text\">x0</code>, <code class=\"language-text\">g(n) = f^n(x0)</code>.</p>\n<p>Por esto, podemos escribir el factorial con un ciclo en lugar de usar recursión. Saber ésta relación y conversión, nos ayudará a identificar cuándo podemos usar una forma o la otra. </p>\n<p>Por ejemplo, existen formas más complicadas del Teorema de recursión y más generales, por lo que hay veces en que no es directa la conversión a un ciclo y se vuelve muy engorroso. En esto casos es más factible realizar reclusión. Trata de pasar el algoritmo de mergesort a un ciclo, mucha suerte.</p>\n<h2>Comentarios finales</h2>\n<p>El teorema de recursión se demuestra usando inducción. Por eso, siempre que nos definían algo por recursión, muy probablemente tengamos que usar inducción para demostrar propiedades sobre esa definición.</p>\n<p>Por eso en el primer post les habla de la inducción matemática y su relación con la recursividad. Y con esto queda saldado lo prometido en el primer post:</p>\n<blockquote>\n<p>Estos tiene que ver con la matemática que llevan detrás la recursividad, la cual se introducirá en un post más adelante.</p>\n</blockquote>\n<p>Ahora que tienes las bases matemáticas te invito a leer de nuevo los post anteriores, solo así podrás entender la recursividad:</p>\n<blockquote>\n<p>Lo primero para entender la recursividad, es entender la recursividad.</p>\n</blockquote>\n<h2>Contacto</h2>\n<p>Si quieres hablar más sobre este tema contáctame en:</p>\n<ul>\n<li>Slack: @Héctor (hyfi06) </li>\n<li>Twitter: <a href=\"https://twitter.com/hyfi06\">@hyfi06</a></li>\n<li>Github: <a href=\"https://github.com/hyfi06\">hyfi06</a></li>\n<li>Platzi: <a href=\"https://platzi.com/@hyfi06/\">@hyfi06</a></li>\n</ul>","frontmatter":{"title":"La maquinaria matemática detrás de la recursión","date":"April 14, 2020","description":"Un vistazo matemático a los números naturales y el teorema de la reclusión. Cuarta parte - nivel avanzado","author":"Héctor Olvera Vital","email":"hector.olvera@ciencias.unam.mx","platziUser":"hyfi06"}}},"pageContext":{"slug":"/2020/0414-la-maquinaria-matematica-detras-de-la-r/","previous":{"fields":{"slug":"/2020/0412-introduccion-a-xstate-con-react/"},"frontmatter":{"title":"IA de videojuegos al servicio de la UI"}},"next":null}}}