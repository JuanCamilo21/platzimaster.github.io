{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/0406-computer-science-vs-software-engineer/","result":{"data":{"site":{"siteMetadata":{"title":"Platzi Master"}},"markdownRemark":{"id":"ac247bb9-ef3c-575c-b1bf-a7730028f0bb","excerpt":"Computer Science vs Software Engineer Cuando comenc√© en el mundo de la programaci√≥n fue llegar a un mundo con una cantidad de conocimientos por aprender que‚Ä¶","html":"<h1>Computer Science vs Software Engineer</h1>\n<p>Cuando comenc√© en el mundo de la programaci√≥n fue llegar a un mundo con una cantidad de conocimientos por aprender que parec√≠an infinitos, decid√≠ comenzar jugando con Arduino, me gustaba ver que lo que escrib√≠a en la computadora hac√≠a algo en el mundo f√≠sico, nunca se olvida el primer led que prendiste, tampoco el primero que quemaste.</p>\n<p>Desde ese momento me deje ir con muchos proyectos que ahora ya son como un cl√°sico que te dejan si estudias mecatr√≥nica o una carrera relacionada, pero la primera vez que lo haces te sientes Iron Man, haciendo un brazo rob√≥tico, un sistema de riego automatizado, etc. Aprender esto a una edad ‚Äútemprana‚Äù me dejo dar clases de Rob√≥tica en mi preparatoria, fui alumno y profesor al mismo tiempo, eso me llev√≥ a hacer muchos proyectos con mis alumnos, y me cuestione much√≠simas cosas, simult√°neamente llevaba proyectos de investigaci√≥n cient√≠fica con mis profesores de f√≠sica, uno fue una mesa s√≠smica, que ayuda a entender c√≥mo la tierra se mueve en tres ejes (X, Y, Z), fue creciendo y te ense√±aba las gr√°ficas para que fuera m√°s ilustrativo, despu√©s decid√≠ escalarlo a un software que mezclaba Arquitectura, Ingenier√≠a Civil, Sismicidad, Urbanismo, etc. Era un proyecto m√°s maduro lo desarrolle hasta toparme con una barrera que fue <strong>las matem√°ticas</strong>. </p>\n<p>Esta barrera me freno un tiempo pero la curiosidad me llev√≥ a hacerme muchas preguntas, hoy te quiero contar sobre unas:</p>\n<ul>\n<li>¬øSe necesitan matem√°ticas para programar?</li>\n<li>¬øQu√© es programar?</li>\n</ul>\n<p>Me fui en b√∫squeda de una respuesta con muchos amigos y expertos pero, en la facultad de ciencias de la UNAM me encontr√© con un profesor que me dio la mejor respuesta. La conversaci√≥n fue algo as√≠:</p>\n<p>-Yo üë¶üèΩ: Profesor para usted ¬øQu√© es programar?</p>\n<p>-Profesor üë®üèΩ: Esa pregunta me la hacen mucho mis alumnos, yo siempre empiezo mis clases con los de primer semestre con una pregunta ¬øSaben programar?, inmediatamente me responden cosas como:</p>\n<p> <em>Si, yo programo en JavaScript.</em></p>\n<p> <em>Si, yo programo en Python.</em></p>\n<p>Ah√≠ me doy cuenta que no saben programar, porque <strong><em>programar es saber resolver problemas</em></strong>, poder delimitar un problema a una serie de pasos l√≥gicos que te van a llevar a una soluci√≥n para tu problema, el lenguaje en que lo escribes no importa, importa que resuelves problemas.</p>\n<p>Ah√≠ no termin√≥ la conversaci√≥n pero despu√©s de platicar con √©l yo lo resum√≠ en 2 analog√≠as que hizo que me quedar√° muy claro, hoy te las quiero compartir.</p>\n<p>Saber programar es c√≥mo saber transmitir una idea efectivamente, alguien que sabe dar un mensaje efectivo, va a conectar con su p√∫blico, lo har√° en pocas palabras y al receptor le queda claro.\nPoder transmitir una idea es una cosa muy diferente a saber hablar, el idioma en que lo digas es lo de menos, lo dif√≠cil es conectar con el p√∫blico.</p>\n<p>Seguro te ha pasado que vas por la calle y alguien te pregunta ¬øC√≥mo lleg√≥ a X lugar? t√∫ le vas a dar una serie de pasos l√≥gicos para que esa persona llegue a su destino, pero ¬øQu√© pasar√≠a si sabes su idioma, y no sabes c√≥mo llegar? Estamos perdidos! Lo importante es saber c√≥mo llegar, porque en un escenario donde no sabes el idioma lo puedes acompa√±ar, ense√±arle el camino, y listo! pero s√≠ sabes el idioma pero no el camino probablemente no puedas ayudarlo.</p>\n<p>Desde ese d√≠a me quedaron dos cosas marcadas, responder un simple S√≠, cuando me pregunten ¬øSabes programar? y que la programaci√≥n es saber resolver problemas, las herramientas que uses ya son una cosa aparte.</p>\n<p>Hablando de herramientas quiero llegar a la pregunta <strong><em>¬øSe necesitan las matem√°ticas para programar?</em></strong></p>\n<p><img src=\"https://media.giphy.com/media/dXICCcws9oxxK/giphy.gif\" alt=\"gif de Iron Man\"></p>\n<p>Te voy a contar otra pl√°tica con ese profesor, un d√≠a discutimos este punto y me cont√≥ que es algo curioso de explicar porque tomando en cuenta que programar es resolver problemas, <strong>las matem√°ticas son una herramienta m√°s del programador</strong>, y uno de sus mayores usos es para hacer abstracciones, llevar el problema a un contexto donde sea m√°s f√°cil de comprender y resolver <em>para ti</em>.</p>\n<p>Decidimos preguntar a m√°s programadores entonces empezamos a ver patrones en los programadores, muchos dec√≠an no necesitas las matem√°ticas para programar, hasta darnos cuenta que varios entend√≠an las matem√°ticas como solo la materia de <em>c√°lculo</em>, pero buscando un poco m√°s descubrimos que hay gente que usa √°lgebra para hacer las abstracciones de sus problemas, otras personas usan <em>geometr√≠a</em>, la gran mayor√≠a no usa <em>c√°lculo</em>, y esto no es porque <em>c√°lculo</em> no sirva para abstraer problemas, entra el factor de que <em>c√°lculo</em> a mucha gente le resulta dif√≠cil, y si no ven una soluci√≥n a un problema, mucho menos van a querer plantearlo en una diferencial o una integral o cosas m√°s complejas, lo van a llevar en un contexto amigable para ellos, as√≠ que desde este punto de vista puede que no necesites las matem√°ticas para resolver problemas, si tu logras abstraer los problemas de otra forma y encontrar una soluci√≥n, solo que las matem√°ticas son una de las formas m√°s utilizadas, porque son l√≥gicas.(Hasta cierta dimensi√≥n son l√≥gicas, cuando te hablan de ecuaciones diferenciales en n dimensiones puede empezar a parecer que pierden la l√≥gica ü§Ø)</p>\n<p>Eso me dej√≥ conforme pero no satisfecho, as√≠ que eso me llev√≥ a una pregunta ¬øHasta qu√© nivel de matem√°ticas necesito saber? Es aqu√≠ donde entra la diferencia entre Software Engineer vs Computer Science.</p>\n<p>Hay cient√≠ficos de la computaci√≥n que no tocan c√≥digo, y aunque suena raro es real.</p>\n<p>Esto te lo quiero explicar c√≥mo qui√©n crea la herramienta üõ† y quien crea cosas con esa herramienta üë®üèª‚Äçüîß.</p>\n<p>Los cient√≠ficos de la computaci√≥n se pueden dedicar a crear lenguajes de programaci√≥n, optimizar o crear nuevos algoritmos, investigaci√≥n, etc.</p>\n<p>Los ingenieros de Software crean programas con esos lenguajes o usan esos algoritmos para crear productos.\nEs aqu√≠ donde entra el nivel de matem√°ticas que necesitas para programar y eso est√° directamente relacionado con el √°rea a la que te vas a dedicar, por eso suena mucho con los cient√≠ficos de computaci√≥n ‚ÄúEsas son matem√°ticas de Ingenieros‚Äù y las matem√°ticas de ingenieros pueden ser aplicar f√≥rmulas, f√≥rmulas que aplicas con seguridad, porque existe o existi√≥ un matem√°tico √≥ un cient√≠fico que demostr√≥ que eso es cierto y por eso tu puedes afirmar tus resultados confiando en esa f√≥rmula, de igual manera existen cient√≠ficos de la computaci√≥n que de lenguajes de bajo nivel, construyeron lenguajes de alto nivel que resultan m√°s amigables.</p>\n<p>Esta relaci√≥n se da en muchas √°reas te dar√© unos ejemplos, un coche primero lo dise√±an, se crean las piezas y luego llega a las plantas donde los ensamblan, eso requiere ingenieros, cient√≠ficos, dise√±adores, etc. Otro ejemplo no hay un paciente sano sin un doctor que lo opere, y un enfermero que lo cuide en su recuperaci√≥n. No hay Batman sin Robin, y no hay Robin sin Batman, uno no es mejor que otro, solo son funciones diferentes, si no existieran cient√≠ficos, no habr√≠a ingenieros creando genialidades con lo que los cient√≠ficos probaron te√≥ricamente, es una mezcla que tiene resultados incre√≠bles. </p>\n<p>Esto no quiere decir que te limites a un √°rea, pero esto a mi me ayudo a decidir, qu√© √°rea escoger para delimitar los temas a estudiar y decidir c√∫al era el camino a seguir, espero te ayude en tu crecimiento!. </p>\n<p>Si quieres seguir la conversaci√≥n puedes encontrarme en Twitter como @HumbertMLL y en Instagram como @HumbertoMLL.</p>\n<p>Te espero en un pr√≥ximo blog!</p>","frontmatter":{"title":"Computer Science vs Software Engineer","date":"April 06, 2020","description":"Una opini√≥n personal de lo que hace diferentes las Ciencias de la computaci√≥n a la Ingenier√≠a de Software, y respondiendo desde mi experiencia hasta que nivel se necesitan las matem√°ticas para programar. ","author":"Humberto Lopez","email":"humbertolopez954@gmail.com","platziUser":"HumbertoMLL"}}},"pageContext":{"slug":"/2020/0406-computer-science-vs-software-engineer/","previous":{"fields":{"slug":"/2020/0404-introduccion-a-la-recursion/"},"frontmatter":{"title":"Introducci√≥n a la recursi√≥n"}},"next":null}}}